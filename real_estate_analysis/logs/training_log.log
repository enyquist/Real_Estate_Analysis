2020-12-15 21:48:17,619:MainProcess:root:INFO:Starting Exhaustive Grid Search
2020-12-15 21:50:33,849:MainProcess:root:INFO:Starting Exhaustive Grid Search
2020-12-16 02:22:22,880:MainProcess:root:INFO:Grid Search Complete
2020-12-16 02:22:23,439:MainProcess:root:INFO:Grid object and cv_results_ saved
2020-12-16 02:22:37,177:MainProcess:root:INFO:Results from Exhaustive Grid Search (EGS):
2020-12-16 02:22:37,179:MainProcess:root:INFO:EGS best estimator: Pipeline(steps=[('scaler', QuantileTransformer()),
                ('feature_selection',
                 SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x00000200F0EA6EC8>)),
                ('regressor',
                 <catboost.core.CatBoostRegressor object at 0x00000200F0EA6C48>)])
2020-12-16 02:22:37,180:MainProcess:root:INFO:EGS Validation Score: 0.8124534438242197
2020-12-16 02:22:37,180:MainProcess:root:INFO:EGS Best params: {'feature_selection': SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x00000200EFC601C8>), 'regressor': <catboost.core.CatBoostRegressor object at 0x00000200EFC603C8>, 'regressor__depth': 6, 'regressor__iterations': 1000, 'regressor__learning_rate': 0.05, 'regressor__loss_function': 'RMSE', 'scaler': QuantileTransformer()}
2020-12-16 02:22:37,181:MainProcess:root:INFO:EGS Cross Validation Scores: [0.61991392 0.8101451  0.72269698 0.25037767 0.72657418]
2020-12-16 02:22:37,181:MainProcess:root:INFO:EGS accuracy on data: 0.63 (+/- 0.39)
2020-12-16 02:22:37,181:MainProcess:root:INFO:EGS R2 score: 0.6050700196155784
2020-12-21 08:45:40,375:MainProcess:root:INFO:Starting Voting Regressor Grid Search
2020-12-21 08:45:55,883:MainProcess:root:INFO:Voting Regressor Grid Search Complete
2020-12-21 08:46:04,071:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 08:46:04,086:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000022A73B06DC8>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 08:46:04,086:MainProcess:root:INFO:VGS Validation Score: 0.7684957842874491
2020-12-21 08:46:04,088:MainProcess:root:INFO:VGS Best params: {'feature_selection': 'passthrough', 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000022A73B3E388>),
                            ('randforest', RandomForestRegressor()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'scaler': StandardScaler()}
2020-12-21 08:46:04,088:MainProcess:root:INFO:VGS Cross Validation Scores: [0.76652084 0.75148497 0.76996073 0.28614769 0.70732572]
2020-12-21 08:46:04,088:MainProcess:root:INFO:VGS accuracy on data: 0.66 (+/- 0.37)
2020-12-21 08:46:04,089:MainProcess:root:INFO:VGS R2 score: 0.71
2020-12-21 09:20:27,842:MainProcess:root:INFO:Starting Voting Regressor Grid Search
2020-12-21 09:20:43,164:MainProcess:root:INFO:Voting Regressor Grid Search Complete
2020-12-21 09:23:08,700:MainProcess:root:INFO:Starting Voting Regressor Grid Search
2020-12-21 09:23:20,192:MainProcess:root:INFO:Voting Regressor Grid Search Complete
2020-12-21 10:13:27,856:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 10:13:43,800:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 10:14:31,302:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 10:14:31,302:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 10:14:43,119:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 10:14:43,119:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 10:16:58,800:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 10:16:58,800:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 10:16:58,800:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 10:17:11,627:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 10:17:11,627:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 10:17:11,627:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 10:18:50,614:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 10:18:50,614:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 10:18:50,614:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 10:18:50,614:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 10:19:02,371:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 10:19:02,371:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 10:19:02,371:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 10:19:02,371:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 10:19:11,006:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 10:19:11,006:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 10:19:11,006:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 10:19:11,006:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 10:19:11,029:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000024AEFEE3648>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 10:19:11,029:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000024AEFEE3648>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 10:19:11,029:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000024AEFEE3648>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 10:19:11,029:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000024AEFEE3648>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 10:19:11,029:MainProcess:root:INFO:VGS Validation Score: 0.7082190698663903
2020-12-21 10:19:11,029:MainProcess:root:INFO:VGS Validation Score: 0.7082190698663903
2020-12-21 10:19:11,029:MainProcess:root:INFO:VGS Validation Score: 0.7082190698663903
2020-12-21 10:19:11,029:MainProcess:root:INFO:VGS Validation Score: 0.7082190698663903
2020-12-21 10:19:11,033:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000024AF0F4AF48>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 10:19:11,033:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000024AF0F4AF48>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 10:19:11,033:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000024AF0F4AF48>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 10:19:11,033:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000024AF0F4AF48>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 10:19:11,033:MainProcess:root:INFO:VGS Cross Validation Scores: [0.74127935 0.84684512 0.77160516 0.65853289 0.81011625]
2020-12-21 10:19:11,033:MainProcess:root:INFO:VGS Cross Validation Scores: [0.74127935 0.84684512 0.77160516 0.65853289 0.81011625]
2020-12-21 10:19:11,033:MainProcess:root:INFO:VGS Cross Validation Scores: [0.74127935 0.84684512 0.77160516 0.65853289 0.81011625]
2020-12-21 10:19:11,033:MainProcess:root:INFO:VGS Cross Validation Scores: [0.74127935 0.84684512 0.77160516 0.65853289 0.81011625]
2020-12-21 10:19:11,034:MainProcess:root:INFO:VGS accuracy on data: 0.77 (+/- 0.13)
2020-12-21 10:19:11,034:MainProcess:root:INFO:VGS accuracy on data: 0.77 (+/- 0.13)
2020-12-21 10:19:11,034:MainProcess:root:INFO:VGS accuracy on data: 0.77 (+/- 0.13)
2020-12-21 10:19:11,034:MainProcess:root:INFO:VGS accuracy on data: 0.77 (+/- 0.13)
2020-12-21 10:19:11,034:MainProcess:root:INFO:VGS R2 score: 0.71
2020-12-21 10:19:11,034:MainProcess:root:INFO:VGS R2 score: 0.71
2020-12-21 10:19:11,034:MainProcess:root:INFO:VGS R2 score: 0.71
2020-12-21 10:19:11,034:MainProcess:root:INFO:VGS R2 score: 0.71
2020-12-21 10:20:43,622:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 10:20:43,622:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 10:20:43,622:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 10:20:43,622:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 10:20:43,622:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 10:20:54,401:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 10:20:54,401:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 10:20:54,401:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 10:20:54,401:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 10:20:54,401:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 10:21:03,077:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 10:21:03,077:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 10:21:03,077:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 10:21:03,077:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 10:21:03,077:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 10:21:03,099:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000024AF3204088>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 10:21:03,099:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000024AF3204088>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 10:21:03,099:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000024AF3204088>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 10:21:03,099:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000024AF3204088>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 10:21:03,099:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000024AF3204088>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 10:21:03,099:MainProcess:root:INFO:VGS Validation Score: 0.7062845856348231
2020-12-21 10:21:03,099:MainProcess:root:INFO:VGS Validation Score: 0.7062845856348231
2020-12-21 10:21:03,099:MainProcess:root:INFO:VGS Validation Score: 0.7062845856348231
2020-12-21 10:21:03,099:MainProcess:root:INFO:VGS Validation Score: 0.7062845856348231
2020-12-21 10:21:03,099:MainProcess:root:INFO:VGS Validation Score: 0.7062845856348231
2020-12-21 10:21:03,103:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000024AEF320B48>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 10:21:03,103:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000024AEF320B48>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 10:21:03,103:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000024AEF320B48>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 10:21:03,103:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000024AEF320B48>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 10:21:03,103:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000024AEF320B48>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 10:21:03,104:MainProcess:root:INFO:VGS Cross Validation Scores: [0.74506854 0.84535845 0.77752761 0.66408937 0.80857744]
2020-12-21 10:21:03,104:MainProcess:root:INFO:VGS Cross Validation Scores: [0.74506854 0.84535845 0.77752761 0.66408937 0.80857744]
2020-12-21 10:21:03,104:MainProcess:root:INFO:VGS Cross Validation Scores: [0.74506854 0.84535845 0.77752761 0.66408937 0.80857744]
2020-12-21 10:21:03,104:MainProcess:root:INFO:VGS Cross Validation Scores: [0.74506854 0.84535845 0.77752761 0.66408937 0.80857744]
2020-12-21 10:21:03,104:MainProcess:root:INFO:VGS Cross Validation Scores: [0.74506854 0.84535845 0.77752761 0.66408937 0.80857744]
2020-12-21 10:21:03,104:MainProcess:root:INFO:VGS accuracy on data: 0.77 (+/- 0.12)
2020-12-21 10:21:03,104:MainProcess:root:INFO:VGS accuracy on data: 0.77 (+/- 0.12)
2020-12-21 10:21:03,104:MainProcess:root:INFO:VGS accuracy on data: 0.77 (+/- 0.12)
2020-12-21 10:21:03,104:MainProcess:root:INFO:VGS accuracy on data: 0.77 (+/- 0.12)
2020-12-21 10:21:03,104:MainProcess:root:INFO:VGS accuracy on data: 0.77 (+/- 0.12)
2020-12-21 10:21:03,104:MainProcess:root:INFO:VGS R2 score: 0.71
2020-12-21 10:21:03,104:MainProcess:root:INFO:VGS R2 score: 0.71
2020-12-21 10:21:03,104:MainProcess:root:INFO:VGS R2 score: 0.71
2020-12-21 10:21:03,104:MainProcess:root:INFO:VGS R2 score: 0.71
2020-12-21 10:21:03,104:MainProcess:root:INFO:VGS R2 score: 0.71
2020-12-21 10:22:34,848:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 10:22:34,848:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 10:22:34,848:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 10:22:34,848:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 10:22:34,848:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 10:22:59,662:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 10:23:15,411:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 10:23:24,214:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 10:23:24,237:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000279F337FE08>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 10:23:24,237:MainProcess:root:INFO:VGS Validation Score: 0.7061135724156192
2020-12-21 10:23:24,241:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x00000279F23360C8>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 10:23:24,241:MainProcess:root:INFO:VGS Cross Validation Scores: [0.74907708 0.84637392 0.77073951 0.66383137 0.80688185]
2020-12-21 10:23:24,241:MainProcess:root:INFO:VGS accuracy on data: 0.77 (+/- 0.12)
2020-12-21 10:23:24,241:MainProcess:root:INFO:VGS R2 score: 0.71
2020-12-21 11:08:24,774:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 11:08:24,774:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 11:08:40,113:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 11:08:40,113:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 11:08:48,752:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 11:08:48,752:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 11:08:48,776:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('imputer', SimpleImputer()), ('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000279F20CB288>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 11:08:48,776:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('imputer', SimpleImputer()), ('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000279F20CB288>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 11:08:48,776:MainProcess:root:INFO:VGS Validation Score: 0.7086913436870643
2020-12-21 11:08:48,776:MainProcess:root:INFO:VGS Validation Score: 0.7086913436870643
2020-12-21 11:08:48,780:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x00000279F1ED6E88>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 11:08:48,780:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x00000279F1ED6E88>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 11:08:48,780:MainProcess:root:INFO:VGS Cross Validation Scores: [0.74397904 0.84720618 0.77300791 0.66696222 0.80334603]
2020-12-21 11:08:48,780:MainProcess:root:INFO:VGS Cross Validation Scores: [0.74397904 0.84720618 0.77300791 0.66696222 0.80334603]
2020-12-21 11:08:48,780:MainProcess:root:INFO:VGS accuracy on data: 0.77 (+/- 0.12)
2020-12-21 11:08:48,780:MainProcess:root:INFO:VGS accuracy on data: 0.77 (+/- 0.12)
2020-12-21 11:08:48,780:MainProcess:root:INFO:VGS R2 score: 0.71
2020-12-21 11:08:48,780:MainProcess:root:INFO:VGS R2 score: 0.71
2020-12-21 11:09:03,594:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 11:09:51,621:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 11:10:06,937:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 11:10:15,595:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 11:10:15,619:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('imputer', SimpleImputer()), ('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x000001ADF2058B48>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 11:10:15,619:MainProcess:root:INFO:VGS Validation Score: 0.707542321421388
2020-12-21 11:10:15,623:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x000001ADF203EF08>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 11:10:15,623:MainProcess:root:INFO:VGS Cross Validation Scores: [0.7400463  0.84644945 0.77527165 0.6604864  0.80831842]
2020-12-21 11:10:15,623:MainProcess:root:INFO:VGS accuracy on data: 0.77 (+/- 0.13)
2020-12-21 11:10:15,623:MainProcess:root:INFO:VGS R2 score: 0.71
2020-12-21 11:10:52,619:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 11:11:08,374:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 11:11:16,899:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 11:11:16,923:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000026A7019F9C8>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 11:11:16,923:MainProcess:root:INFO:VGS Validation Score: 0.7078167062798115
2020-12-21 11:11:16,926:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000026A7014DE88>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 11:11:16,927:MainProcess:root:INFO:VGS Cross Validation Scores: [0.74533782 0.84850431 0.77536661 0.66437842 0.8077301 ]
2020-12-21 11:11:16,927:MainProcess:root:INFO:VGS accuracy on data: 0.77 (+/- 0.12)
2020-12-21 11:11:16,927:MainProcess:root:INFO:VGS R2 score: 0.71
2020-12-21 11:19:47,380:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 11:19:47,380:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 11:20:02,899:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 11:20:02,899:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 11:20:11,332:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 11:20:11,332:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 11:20:11,354:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000026A6FEE5A88>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 11:20:11,354:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000026A6FEE5A88>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 11:20:11,354:MainProcess:root:INFO:VGS Validation Score: 0.708314786690473
2020-12-21 11:20:11,354:MainProcess:root:INFO:VGS Validation Score: 0.708314786690473
2020-12-21 11:20:11,358:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000026A6FCEAE08>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 11:20:11,358:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000026A6FCEAE08>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 11:20:11,359:MainProcess:root:INFO:VGS Cross Validation Scores: [0.74135661 0.8474686  0.7742059  0.66382801 0.79541238]
2020-12-21 11:20:11,359:MainProcess:root:INFO:VGS Cross Validation Scores: [0.74135661 0.8474686  0.7742059  0.66382801 0.79541238]
2020-12-21 11:20:11,359:MainProcess:root:INFO:VGS accuracy on all data: 0.76 (+/- 0.12)
2020-12-21 11:20:11,359:MainProcess:root:INFO:VGS accuracy on all data: 0.76 (+/- 0.12)
2020-12-21 11:20:11,359:MainProcess:root:INFO:VGS test score: 0.71
2020-12-21 11:20:11,359:MainProcess:root:INFO:VGS test score: 0.71
2020-12-21 11:20:51,631:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 11:21:07,409:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 11:21:16,251:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 11:21:16,274:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000028FEFA98588>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 11:21:16,274:MainProcess:root:INFO:VGS Validation Score: 0.7074981082910592
2020-12-21 11:21:16,278:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000028FEEE85808>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 11:21:16,278:MainProcess:root:INFO:VGS Cross Validation Scores: [0.74120735 0.84639464 0.77866772 0.66251074 0.81306646]
2020-12-21 11:21:16,278:MainProcess:root:INFO:VGS accuracy on all data: 0.77 (+/- 0.13)
2020-12-21 11:21:16,278:MainProcess:root:INFO:VGS test score: 0.71
2020-12-21 11:21:16,278:MainProcess:root:INFO:VGS R2 score: 0.71
2020-12-21 11:43:40,526:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 11:43:40,526:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 11:43:57,692:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 11:43:57,692:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 11:44:09,224:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 11:44:09,224:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 11:44:09,247:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', RobustScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000234EED295C8>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 11:44:09,247:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', RobustScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000234EED295C8>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 11:44:09,247:MainProcess:root:INFO:VGS Validation Score: 0.7737395751965993
2020-12-21 11:44:09,247:MainProcess:root:INFO:VGS Validation Score: 0.7737395751965993
2020-12-21 11:44:09,251:MainProcess:root:INFO:VGS Best params: {'scaler': RobustScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x00000234F1F688C8>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 11:44:09,251:MainProcess:root:INFO:VGS Best params: {'scaler': RobustScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x00000234F1F688C8>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 11:44:09,251:MainProcess:root:INFO:VGS Cross Validation Scores: [0.8155759  0.64466581 0.85818464 0.73147819 0.62328156]
2020-12-21 11:44:09,251:MainProcess:root:INFO:VGS Cross Validation Scores: [0.8155759  0.64466581 0.85818464 0.73147819 0.62328156]
2020-12-21 11:44:09,251:MainProcess:root:INFO:VGS accuracy on all data: 0.73 (+/- 0.18)
2020-12-21 11:44:09,251:MainProcess:root:INFO:VGS accuracy on all data: 0.73 (+/- 0.18)
2020-12-21 11:44:09,251:MainProcess:root:INFO:VGS test score: 0.66
2020-12-21 11:44:09,251:MainProcess:root:INFO:VGS test score: 0.66
2020-12-21 11:44:09,251:MainProcess:root:INFO:VGS R2 score: 0.66
2020-12-21 11:44:09,251:MainProcess:root:INFO:VGS R2 score: 0.66
2020-12-21 11:44:21,113:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 11:44:37,609:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 11:44:49,395:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 11:44:49,418:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', RobustScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000018A70F498C8>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 11:44:49,418:MainProcess:root:INFO:VGS Validation Score: 0.7735023725987338
2020-12-21 11:44:49,422:MainProcess:root:INFO:VGS Best params: {'scaler': RobustScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000018A6F465208>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 11:44:49,422:MainProcess:root:INFO:VGS Cross Validation Scores: [0.81691567 0.645676   0.85408667 0.7321544  0.6219878 ]
2020-12-21 11:44:49,422:MainProcess:root:INFO:VGS accuracy on all data: 0.73 (+/- 0.18)
2020-12-21 11:44:49,423:MainProcess:root:INFO:VGS test score: 0.66
2020-12-21 11:44:49,423:MainProcess:root:INFO:VGS R2 score: 0.66
2020-12-21 11:51:06,123:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-21 11:51:30,970:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-21 11:51:42,697:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-21 11:51:42,721:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', RobustScaler()),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000154F6EC1D88>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-21 11:51:42,721:MainProcess:root:INFO:VGS Validation Score: 0.7114516929809305
2020-12-21 11:51:42,724:MainProcess:root:INFO:VGS Best params: {'scaler': RobustScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x00000154F84CEF48>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))])}
2020-12-21 11:51:42,725:MainProcess:root:INFO:VGS Cross Validation Scores: [0.81699365 0.64474067 0.85933739 0.73270409 0.62448673]
2020-12-21 11:51:42,725:MainProcess:root:INFO:VGS accuracy on all data: 0.74 (+/- 0.18)
2020-12-21 11:51:42,725:MainProcess:root:INFO:VGS test score: 0.87
2020-12-21 11:51:42,725:MainProcess:root:INFO:VGS R2 score: 0.87
2020-12-23 13:20:20,042:MainProcess:root:INFO:test
2020-12-23 13:21:46,066:MainProcess:root:INFO:test
2020-12-23 13:33:33,296:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 13:33:33,296:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 13:43:49,101:MainProcess:root:INFO:Starting Regressor Training
2020-12-23 13:43:49,101:MainProcess:root:INFO:Starting Regressor Training
2020-12-23 13:43:49,101:MainProcess:root:INFO:Starting Regressor Training
2020-12-23 13:47:10,399:MainProcess:root:INFO:Starting Regressor Training
2020-12-23 13:58:37,911:MainProcess:root:INFO:Regressor Training Complete
2020-12-23 14:02:05,060:MainProcess:root:INFO:Results from Randomized Grid Search (RGS):
2020-12-23 14:02:05,063:MainProcess:root:INFO:RGS best estimator: Pipeline(steps=[('scaler', RobustScaler()),
                ('feature_selection',
                 RFECV(estimator=<catboost.core.CatBoostRegressor object at 0x0000020873F919C8>,
                       step=0.2)),
                ('regressor',
                 <catboost.core.CatBoostRegressor object at 0x000002087505D448>)])
2020-12-23 14:02:05,063:MainProcess:root:INFO:RGS Validation Score: 0.6797365755730966
2020-12-23 14:02:05,064:MainProcess:root:INFO:RGS Best params: {'scaler': RobustScaler(), 'regressor__loss_function': 'RMSE', 'regressor__learning_rate': 0.05, 'regressor__iterations': 1000, 'regressor__depth': 6, 'regressor': <catboost.core.CatBoostRegressor object at 0x0000020873F51208>, 'feature_selection': RFECV(estimator=<catboost.core.CatBoostRegressor object at 0x0000020873F51408>,
      step=0.2)}
2020-12-23 14:02:05,064:MainProcess:root:INFO:RGS Cross Validation Scores: [0.74567611 0.82943665 0.74755348 0.53558083 0.78026391]
2020-12-23 14:02:05,064:MainProcess:root:INFO:RGS accuracy on all data: 0.73 (+/- 0.20)
2020-12-23 14:02:05,064:MainProcess:root:INFO:RGS test score: 0.66
2020-12-23 14:02:05,064:MainProcess:root:INFO:RGS R2 score: 0.66
2020-12-23 14:34:07,072:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 14:34:07,072:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 14:34:07,072:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 14:39:21,218:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 14:39:21,218:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 14:39:21,218:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 14:39:21,218:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 14:39:41,757:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-23 14:39:41,757:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-23 14:39:41,757:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-23 14:39:41,757:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-23 14:39:56,609:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-23 14:39:56,609:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-23 14:39:56,609:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-23 14:39:56,609:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-23 14:39:56,634:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection',
                 SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020873ECB708>)),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000208774AAF48>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-23 14:39:56,634:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection',
                 SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020873ECB708>)),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000208774AAF48>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-23 14:39:56,634:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection',
                 SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020873ECB708>)),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000208774AAF48>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-23 14:39:56,634:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection',
                 SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020873ECB708>)),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000208774AAF48>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-23 14:39:56,634:MainProcess:root:INFO:VGS Validation Score: 0.6384560722205893
2020-12-23 14:39:56,634:MainProcess:root:INFO:VGS Validation Score: 0.6384560722205893
2020-12-23 14:39:56,634:MainProcess:root:INFO:VGS Validation Score: 0.6384560722205893
2020-12-23 14:39:56,634:MainProcess:root:INFO:VGS Validation Score: 0.6384560722205893
2020-12-23 14:39:56,638:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000020873C9FFC8>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020873C9FE48>)}
2020-12-23 14:39:56,638:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000020873C9FFC8>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020873C9FE48>)}
2020-12-23 14:39:56,638:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000020873C9FFC8>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020873C9FE48>)}
2020-12-23 14:39:56,638:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000020873C9FFC8>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020873C9FE48>)}
2020-12-23 14:39:56,639:MainProcess:root:INFO:VGS Cross Validation Scores: [0.66486083 0.83436442 0.70661455 0.66361574 0.7163639 ]
2020-12-23 14:39:56,639:MainProcess:root:INFO:VGS Cross Validation Scores: [0.66486083 0.83436442 0.70661455 0.66361574 0.7163639 ]
2020-12-23 14:39:56,639:MainProcess:root:INFO:VGS Cross Validation Scores: [0.66486083 0.83436442 0.70661455 0.66361574 0.7163639 ]
2020-12-23 14:39:56,639:MainProcess:root:INFO:VGS Cross Validation Scores: [0.66486083 0.83436442 0.70661455 0.66361574 0.7163639 ]
2020-12-23 14:39:56,639:MainProcess:root:INFO:VGS accuracy on all data: 0.72 (+/- 0.12)
2020-12-23 14:39:56,639:MainProcess:root:INFO:VGS accuracy on all data: 0.72 (+/- 0.12)
2020-12-23 14:39:56,639:MainProcess:root:INFO:VGS accuracy on all data: 0.72 (+/- 0.12)
2020-12-23 14:39:56,639:MainProcess:root:INFO:VGS accuracy on all data: 0.72 (+/- 0.12)
2020-12-23 14:39:56,639:MainProcess:root:INFO:VGS test score: 0.66
2020-12-23 14:39:56,639:MainProcess:root:INFO:VGS test score: 0.66
2020-12-23 14:39:56,639:MainProcess:root:INFO:VGS test score: 0.66
2020-12-23 14:39:56,639:MainProcess:root:INFO:VGS test score: 0.66
2020-12-23 14:39:56,639:MainProcess:root:INFO:VGS R2 score: 0.66
2020-12-23 14:39:56,639:MainProcess:root:INFO:VGS R2 score: 0.66
2020-12-23 14:39:56,639:MainProcess:root:INFO:VGS R2 score: 0.66
2020-12-23 14:39:56,639:MainProcess:root:INFO:VGS R2 score: 0.66
2020-12-23 14:41:47,597:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 14:41:47,597:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 14:41:47,597:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 14:41:47,597:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 14:41:47,597:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 14:42:19,719:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-23 14:42:19,719:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-23 14:42:19,719:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-23 14:42:19,719:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-23 14:42:19,719:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-23 14:42:35,332:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-23 14:42:35,332:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-23 14:42:35,332:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-23 14:42:35,332:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-23 14:42:35,332:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-23 14:42:35,356:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', RobustScaler()),
                ('feature_selection',
                 SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020875035288>)),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000208773461C8>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-23 14:42:35,356:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', RobustScaler()),
                ('feature_selection',
                 SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020875035288>)),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000208773461C8>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-23 14:42:35,356:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', RobustScaler()),
                ('feature_selection',
                 SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020875035288>)),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000208773461C8>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-23 14:42:35,356:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', RobustScaler()),
                ('feature_selection',
                 SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020875035288>)),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000208773461C8>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-23 14:42:35,356:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', RobustScaler()),
                ('feature_selection',
                 SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020875035288>)),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000208773461C8>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-23 14:42:35,357:MainProcess:root:INFO:VGS Validation Score: 0.6392634742954086
2020-12-23 14:42:35,357:MainProcess:root:INFO:VGS Validation Score: 0.6392634742954086
2020-12-23 14:42:35,357:MainProcess:root:INFO:VGS Validation Score: 0.6392634742954086
2020-12-23 14:42:35,357:MainProcess:root:INFO:VGS Validation Score: 0.6392634742954086
2020-12-23 14:42:35,357:MainProcess:root:INFO:VGS Validation Score: 0.6392634742954086
2020-12-23 14:42:35,361:MainProcess:root:INFO:VGS Best params: {'scaler': RobustScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x00000208750A1E48>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020873CE5F88>)}
2020-12-23 14:42:35,361:MainProcess:root:INFO:VGS Best params: {'scaler': RobustScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x00000208750A1E48>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020873CE5F88>)}
2020-12-23 14:42:35,361:MainProcess:root:INFO:VGS Best params: {'scaler': RobustScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x00000208750A1E48>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020873CE5F88>)}
2020-12-23 14:42:35,361:MainProcess:root:INFO:VGS Best params: {'scaler': RobustScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x00000208750A1E48>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020873CE5F88>)}
2020-12-23 14:42:35,361:MainProcess:root:INFO:VGS Best params: {'scaler': RobustScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x00000208750A1E48>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000020873CE5F88>)}
2020-12-23 14:42:35,361:MainProcess:root:INFO:VGS Cross Validation Scores: [0.67014006 0.83240124 0.69820416 0.63202202 0.73249052]
2020-12-23 14:42:35,361:MainProcess:root:INFO:VGS Cross Validation Scores: [0.67014006 0.83240124 0.69820416 0.63202202 0.73249052]
2020-12-23 14:42:35,361:MainProcess:root:INFO:VGS Cross Validation Scores: [0.67014006 0.83240124 0.69820416 0.63202202 0.73249052]
2020-12-23 14:42:35,361:MainProcess:root:INFO:VGS Cross Validation Scores: [0.67014006 0.83240124 0.69820416 0.63202202 0.73249052]
2020-12-23 14:42:35,361:MainProcess:root:INFO:VGS Cross Validation Scores: [0.67014006 0.83240124 0.69820416 0.63202202 0.73249052]
2020-12-23 14:42:35,362:MainProcess:root:INFO:VGS accuracy on all data: 0.71 (+/- 0.14)
2020-12-23 14:42:35,362:MainProcess:root:INFO:VGS accuracy on all data: 0.71 (+/- 0.14)
2020-12-23 14:42:35,362:MainProcess:root:INFO:VGS accuracy on all data: 0.71 (+/- 0.14)
2020-12-23 14:42:35,362:MainProcess:root:INFO:VGS accuracy on all data: 0.71 (+/- 0.14)
2020-12-23 14:42:35,362:MainProcess:root:INFO:VGS accuracy on all data: 0.71 (+/- 0.14)
2020-12-23 14:42:35,362:MainProcess:root:INFO:VGS test score: 0.67
2020-12-23 14:42:35,362:MainProcess:root:INFO:VGS test score: 0.67
2020-12-23 14:42:35,362:MainProcess:root:INFO:VGS test score: 0.67
2020-12-23 14:42:35,362:MainProcess:root:INFO:VGS test score: 0.67
2020-12-23 14:42:35,362:MainProcess:root:INFO:VGS test score: 0.67
2020-12-23 14:42:35,362:MainProcess:root:INFO:VGS R2 score: 0.67
2020-12-23 14:42:35,362:MainProcess:root:INFO:VGS R2 score: 0.67
2020-12-23 14:42:35,362:MainProcess:root:INFO:VGS R2 score: 0.67
2020-12-23 14:42:35,362:MainProcess:root:INFO:VGS R2 score: 0.67
2020-12-23 14:42:35,362:MainProcess:root:INFO:VGS R2 score: 0.67
2020-12-23 14:43:16,628:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 14:43:54,991:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-23 14:44:10,644:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-23 14:44:10,669:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', RobustScaler()),
                ('feature_selection',
                 SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000021371FABA88>)),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000021371FAB788>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-23 14:44:10,669:MainProcess:root:INFO:VGS Validation Score: 0.6371237924619781
2020-12-23 14:44:10,673:MainProcess:root:INFO:VGS Best params: {'scaler': RobustScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000021370F55D08>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x000002137076B6C8>)}
2020-12-23 14:44:10,673:MainProcess:root:INFO:VGS Cross Validation Scores: [0.6717277  0.83419477 0.69658845 0.62904472 0.72567105]
2020-12-23 14:44:10,673:MainProcess:root:INFO:VGS accuracy on all data: 0.71 (+/- 0.14)
2020-12-23 14:44:10,673:MainProcess:root:INFO:VGS test score: 0.67
2020-12-23 14:44:10,673:MainProcess:root:INFO:VGS R2 score: 0.67
2020-12-23 14:48:31,603:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 14:49:09,814:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-23 14:49:29,555:MainProcess:root:INFO:Results from Voting Regressor Grid Search (VGS):
2020-12-23 14:49:29,579:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection',
                 SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000021370F43348>)),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000021370F43088>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-23 14:49:29,579:MainProcess:root:INFO:VGS Validation Score: 0.7562397217955162
2020-12-23 14:49:29,583:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000021370F54F88>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000021370F54508>)}
2020-12-23 14:49:29,583:MainProcess:root:INFO:VGS Cross Validation Scores: [0.7681488  0.63478995 0.82113333 0.68365414 0.6043568 ]
2020-12-23 14:49:29,583:MainProcess:root:INFO:VGS accuracy on all data: 0.70 (+/- 0.16)
2020-12-23 14:49:29,583:MainProcess:root:INFO:VGS test score: 0.84
2020-12-23 14:49:29,583:MainProcess:root:INFO:VGS R2 score: 0.84
2020-12-23 14:52:50,966:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 14:52:50,966:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-23 14:53:26,193:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-23 14:53:26,193:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-23 14:53:41,352:MainProcess:root:INFO:Results from Voting Regressor Randomized Search (VGS):
2020-12-23 14:53:41,352:MainProcess:root:INFO:Results from Voting Regressor Randomized Search (VGS):
2020-12-23 14:53:41,376:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', RobustScaler()),
                ('feature_selection',
                 SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x00000213740966C8>)),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000021374096288>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-23 14:53:41,376:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', RobustScaler()),
                ('feature_selection',
                 SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x00000213740966C8>)),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000021374096288>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-23 14:53:41,376:MainProcess:root:INFO:VGS Validation Score: 0.6412820901522669
2020-12-23 14:53:41,376:MainProcess:root:INFO:VGS Validation Score: 0.6412820901522669
2020-12-23 14:53:41,380:MainProcess:root:INFO:VGS Best params: {'scaler': RobustScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000021371FF5E88>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000021370AEA388>)}
2020-12-23 14:53:41,380:MainProcess:root:INFO:VGS Best params: {'scaler': RobustScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000021371FF5E88>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x0000021370AEA388>)}
2020-12-23 14:53:41,380:MainProcess:root:INFO:VGS Cross Validation Scores: [0.66578107 0.83279792 0.69898508 0.63089407 0.71967524]
2020-12-23 14:53:41,380:MainProcess:root:INFO:VGS Cross Validation Scores: [0.66578107 0.83279792 0.69898508 0.63089407 0.71967524]
2020-12-23 14:53:41,380:MainProcess:root:INFO:VGS accuracy on all data: 0.71 (+/- 0.14)
2020-12-23 14:53:41,380:MainProcess:root:INFO:VGS accuracy on all data: 0.71 (+/- 0.14)
2020-12-23 14:53:41,380:MainProcess:root:INFO:VGS test score: 0.67
2020-12-23 14:53:41,380:MainProcess:root:INFO:VGS test score: 0.67
2020-12-23 14:53:41,381:MainProcess:root:INFO:VGS R2 score: 0.67
2020-12-23 14:53:41,381:MainProcess:root:INFO:VGS R2 score: 0.67
2020-12-23 14:58:06,713:MainProcess:root:INFO:VGS Validation Score: 0.64
2020-12-23 14:58:06,713:MainProcess:root:INFO:VGS Validation Score: 0.64
2020-12-27 09:07:55,264:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-27 09:14:10,977:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-27 09:33:09,677:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-27 09:33:28,585:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-27 09:35:15,944:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-27 09:35:38,283:MainProcess:root:INFO:Results from Voting Regressor Randomized Search (VGS):
2020-12-27 09:35:38,306:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000191F5F905C8>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-27 09:35:38,306:MainProcess:root:INFO:VGS Validation Score: 0.75
2020-12-27 09:35:38,309:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x00000191F55BA588>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': 'passthrough'}
2020-12-27 09:35:38,310:MainProcess:root:INFO:VGS Cross Validation Scores: [   0.74670894    0.71200369 -182.52320453    0.28959305    0.71257525]
2020-12-27 09:35:38,310:MainProcess:root:INFO:VGS accuracy on all data: -36.01 (+/- 146.51)
2020-12-27 09:35:38,310:MainProcess:root:INFO:VGS test score: 0.75
2020-12-27 09:35:38,310:MainProcess:root:INFO:VGS R2 score: 0.75
2020-12-27 12:01:48,037:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-27 12:01:48,037:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-27 12:03:43,867:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-27 12:03:43,867:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-27 12:04:06,080:MainProcess:root:INFO:Results from Voting Regressor Randomized Search (VGS):
2020-12-27 12:04:06,080:MainProcess:root:INFO:Results from Voting Regressor Randomized Search (VGS):
2020-12-27 12:04:06,103:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000191F4F0DF08>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-27 12:04:06,103:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000191F4F0DF08>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-27 12:04:06,103:MainProcess:root:INFO:VGS Validation Score: 0.75
2020-12-27 12:04:06,103:MainProcess:root:INFO:VGS Validation Score: 0.75
2020-12-27 12:04:06,107:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x00000191F4776CC8>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': 'passthrough'}
2020-12-27 12:04:06,107:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x00000191F4776CC8>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': 'passthrough'}
2020-12-27 12:04:06,107:MainProcess:root:INFO:VGS Cross Validation Scores: [   0.74769803    0.7102489  -182.30574393    0.29369963    0.71383632]
2020-12-27 12:04:06,107:MainProcess:root:INFO:VGS Cross Validation Scores: [   0.74769803    0.7102489  -182.30574393    0.29369963    0.71383632]
2020-12-27 12:04:06,107:MainProcess:root:INFO:VGS accuracy on all data: -35.97 (+/- 146.34)
2020-12-27 12:04:06,107:MainProcess:root:INFO:VGS accuracy on all data: -35.97 (+/- 146.34)
2020-12-27 12:04:06,107:MainProcess:root:INFO:VGS test score: 0.75
2020-12-27 12:04:06,107:MainProcess:root:INFO:VGS test score: 0.75
2020-12-27 12:04:06,107:MainProcess:root:INFO:VGS R2 score: 0.75
2020-12-27 12:04:06,107:MainProcess:root:INFO:VGS R2 score: 0.75
2020-12-27 12:37:02,037:MainProcess:root:INFO:Starting Regressor Training
2020-12-27 12:37:02,037:MainProcess:root:INFO:Starting Regressor Training
2020-12-27 12:37:10,475:MainProcess:root:INFO:Starting Regressor Training
2020-12-27 13:32:33,579:MainProcess:root:INFO:Regressor Training Complete
2020-12-27 13:40:05,885:MainProcess:root:INFO:Results from Randomized Grid Search (RGS):
2020-12-27 13:40:05,888:MainProcess:root:INFO:RGS best estimator: Pipeline(steps=[('scaler', RobustScaler()),
                ('feature_selection',
                 RFECV(estimator=<catboost.core.CatBoostRegressor object at 0x0000028F76C2B548>,
                       step=0.2)),
                ('regressor',
                 <catboost.core.CatBoostRegressor object at 0x0000028F76C2B448>)])
2020-12-27 13:40:05,888:MainProcess:root:INFO:RGS Validation Score: 0.8491577972346784
2020-12-27 13:40:05,889:MainProcess:root:INFO:RGS Best params: {'scaler': RobustScaler(), 'regressor__loss_function': 'RMSE', 'regressor__learning_rate': 0.05, 'regressor__iterations': 1500, 'regressor__depth': 8, 'regressor': <catboost.core.CatBoostRegressor object at 0x0000028F74F2D448>, 'feature_selection': RFECV(estimator=<catboost.core.CatBoostRegressor object at 0x0000028F7674D048>,
      step=0.2)}
2020-12-27 13:40:05,889:MainProcess:root:INFO:RGS Cross Validation Scores: [ 0.81946377  0.74768273  0.70388037 -0.10789635  0.62905247]
2020-12-27 13:40:05,889:MainProcess:root:INFO:RGS accuracy on all data: 0.56 (+/- 0.68)
2020-12-27 13:40:05,889:MainProcess:root:INFO:RGS test score: 0.86
2020-12-27 13:40:05,889:MainProcess:root:INFO:RGS R2 score: 0.86
2020-12-27 13:49:34,271:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-27 13:49:34,271:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-27 13:53:46,768:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-27 13:53:46,768:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-27 13:54:34,704:MainProcess:root:INFO:Results from Voting Regressor Randomized Search (VGS):
2020-12-27 13:54:34,704:MainProcess:root:INFO:Results from Voting Regressor Randomized Search (VGS):
2020-12-27 13:54:34,730:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000028F76773888>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-27 13:54:34,730:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000028F76773888>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-27 13:54:34,730:MainProcess:root:INFO:VGS Validation Score: 0.75
2020-12-27 13:54:34,730:MainProcess:root:INFO:VGS Validation Score: 0.75
2020-12-27 13:54:34,734:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000028F73B6A9C8>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': 'passthrough'}
2020-12-27 13:54:34,734:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000028F73B6A9C8>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': 'passthrough'}
2020-12-27 13:54:34,734:MainProcess:root:INFO:VGS Cross Validation Scores: [   0.746608      0.70370181 -182.18660426    0.29693592    0.71109882]
2020-12-27 13:54:34,734:MainProcess:root:INFO:VGS Cross Validation Scores: [   0.746608      0.70370181 -182.18660426    0.29693592    0.71109882]
2020-12-27 13:54:34,734:MainProcess:root:INFO:VGS accuracy on all data: -35.95 (+/- 146.24)
2020-12-27 13:54:34,734:MainProcess:root:INFO:VGS accuracy on all data: -35.95 (+/- 146.24)
2020-12-27 13:54:34,735:MainProcess:root:INFO:VGS test score: 0.75
2020-12-27 13:54:34,735:MainProcess:root:INFO:VGS test score: 0.75
2020-12-27 13:54:34,735:MainProcess:root:INFO:VGS R2 score: 0.75
2020-12-27 13:54:34,735:MainProcess:root:INFO:VGS R2 score: 0.75
2020-12-27 13:54:55,683:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-27 13:59:07,835:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-27 13:59:55,668:MainProcess:root:INFO:Results from Voting Regressor Randomized Search (VGS):
2020-12-27 13:59:55,691:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000020274D79288>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-27 13:59:55,691:MainProcess:root:INFO:VGS Validation Score: 0.75
2020-12-27 13:59:55,695:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x00000202730BD548>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': 'passthrough'}
2020-12-27 13:59:55,695:MainProcess:root:INFO:VGS Cross Validation Scores: [   0.74659476    0.70264914 -182.24063743    0.29708606    0.7109509 ]
2020-12-27 13:59:55,695:MainProcess:root:INFO:VGS accuracy on all data: -35.96 (+/- 146.28)
2020-12-27 13:59:55,695:MainProcess:root:INFO:VGS test score: 0.75
2020-12-27 13:59:55,695:MainProcess:root:INFO:VGS R2 score: 0.75
2020-12-27 17:45:21,032:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-27 17:49:26,421:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-27 17:50:13,629:MainProcess:root:INFO:Results from Voting Regressor Randomized Search (VGS):
2020-12-27 17:50:13,651:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000231738935C8>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-27 17:50:13,652:MainProcess:root:INFO:VGS Validation Score: 0.75
2020-12-27 17:50:13,655:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x000002317358D348>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': 'passthrough'}
2020-12-27 17:50:13,655:MainProcess:root:INFO:VGS Cross Validation Scores: [   0.73358167    0.76255853 -103.03309804    0.28481825    0.70378079]
2020-12-27 17:50:13,656:MainProcess:root:INFO:VGS accuracy on all data: -20.11 (+/- 82.92)
2020-12-27 17:50:13,656:MainProcess:root:INFO:VGS test score: 0.74
2020-12-27 17:50:13,656:MainProcess:root:INFO:VGS R2 score: 0.74
2020-12-28 08:12:04,294:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-28 08:12:18,897:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-28 08:13:52,119:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-28 08:14:20,710:MainProcess:root:INFO:Results from Voting Regressor Randomized Search (VGS):
2020-12-28 08:14:20,733:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', RobustScaler()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x000001C97236D348>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-28 08:14:20,733:MainProcess:root:INFO:VGS Validation Score: 0.61
2020-12-28 08:14:20,737:MainProcess:root:INFO:VGS Best params: {'scaler': RobustScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x000001C9721A6208>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': 'passthrough'}
2020-12-28 08:14:20,737:MainProcess:root:INFO:VGS Cross Validation Scores: [0.66588878 0.77731078 0.80248862 0.63873209 0.78348847]
2020-12-28 08:14:20,737:MainProcess:root:INFO:VGS accuracy on all data: 0.73 (+/- 0.13)
2020-12-28 08:14:20,737:MainProcess:root:INFO:VGS test score: 0.64
2020-12-28 08:14:20,737:MainProcess:root:INFO:VGS R2 score: 0.64
2020-12-28 08:16:00,038:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-28 08:17:39,974:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-28 08:18:32,528:MainProcess:root:INFO:Results from Voting Regressor Randomized Search (VGS):
2020-12-28 08:18:32,551:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection',
                 SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x000001C9726CB108>)),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x000001C9726CB708>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-28 08:18:32,552:MainProcess:root:INFO:VGS Validation Score: 0.68
2020-12-28 08:18:32,555:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x000001C9721A6208>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x000001C9721A6208>)}
2020-12-28 08:18:32,556:MainProcess:root:INFO:VGS Cross Validation Scores: [0.49060625 0.77136572 0.77316276 0.62400657 0.79983397]
2020-12-28 08:18:32,556:MainProcess:root:INFO:VGS accuracy on all data: 0.69 (+/- 0.24)
2020-12-28 08:18:32,556:MainProcess:root:INFO:VGS test score: 0.69
2020-12-28 08:18:32,556:MainProcess:root:INFO:VGS R2 score: 0.69
2020-12-29 23:49:22,672:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-29 23:50:55,534:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-29 23:51:43,241:MainProcess:root:INFO:Results from Voting Regressor Randomized Search (VGS):
2020-12-29 23:51:43,262:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000026FEE672588>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-29 23:51:43,262:MainProcess:root:INFO:VGS Validation Score: 0.66
2020-12-29 23:51:43,266:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000026FEE5D0D08>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': 'passthrough'}
2020-12-29 23:51:43,266:MainProcess:root:INFO:VGS Cross Validation Scores: [0.60725527 0.77868901 0.84723379 0.66280351 0.79666414]
2020-12-29 23:51:43,266:MainProcess:root:INFO:VGS accuracy on all data: 0.74 (+/- 0.18)
2020-12-29 23:51:43,266:MainProcess:root:INFO:VGS test score: 0.58
2020-12-29 23:51:43,266:MainProcess:root:INFO:VGS R2 score: 0.58
2020-12-29 23:52:48,815:MainProcess:root:INFO:Starting Voting Regressor Training
2020-12-29 23:54:17,988:MainProcess:root:INFO:Voting Regressor Training Complete
2020-12-29 23:54:46,013:MainProcess:root:INFO:Results from Voting Regressor Randomized Search (VGS):
2020-12-29 23:54:46,035:MainProcess:root:INFO:VGS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x0000026FEF690348>),
                                             ('randforest',
                                              RandomForestRegressor()),
                                             ('enet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0)),
                                             ('lr', LinearRegression()),
                                             ('kn',
                                              KNeighborsRegressor(weights='distance'))]))])
2020-12-29 23:54:46,035:MainProcess:root:INFO:VGS Validation Score: 0.67
2020-12-29 23:54:46,039:MainProcess:root:INFO:VGS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x0000026FEE5D0D08>),
                            ('randforest', RandomForestRegressor()),
                            ('enet', ElasticNet(alpha=100.0, l1_ratio=1.0)),
                            ('lr', LinearRegression()),
                            ('kn', KNeighborsRegressor(weights='distance'))]), 'feature_selection': 'passthrough'}
2020-12-29 23:54:46,039:MainProcess:root:INFO:VGS Cross Validation Scores: [0.60946356 0.77921447 0.8440412  0.65909362 0.79148538]
2020-12-29 23:54:46,039:MainProcess:root:INFO:VGS accuracy on all data: 0.74 (+/- 0.18)
2020-12-29 23:54:46,039:MainProcess:root:INFO:VGS test score: 0.59
2020-12-29 23:54:46,039:MainProcess:root:INFO:VGS R2 score: 0.59
2020-12-30 00:03:07,746:MainProcess:root:INFO:Starting Regressor Training
2020-12-30 00:03:07,746:MainProcess:root:INFO:Starting Regressor Training
2020-12-30 00:03:18,944:MainProcess:root:INFO:Starting Regressor Training
2020-12-30 07:48:25,213:MainProcess:root:INFO:Starting Regressor Training
2020-12-30 07:49:15,648:MainProcess:root:INFO:Starting Regressor Training
2020-12-30 22:43:31,412:MainProcess:root:INFO:Starting Regressor Training
2020-12-31 22:37:45,579:MainProcess:root:INFO:Starting Regressor Training
2020-12-31 22:43:49,413:MainProcess:root:INFO:Starting Regressor Training
2020-12-31 22:45:08,001:MainProcess:root:INFO:Starting Regressor Training
2021-01-01 16:39:43,492:MainProcess:root:INFO:Starting Regressor Training
2021-01-04 11:41:10,220:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 11:41:43,361:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 11:42:26,090:MainProcess:root:INFO:Starting Regressor Training
2021-01-04 11:42:26,090:MainProcess:root:INFO:Starting Regressor Training
2021-01-04 11:43:24,651:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 11:43:24,651:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 11:43:24,651:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 11:43:56,809:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 11:54:52,964:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 12:06:27,150:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 12:06:56,389:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 12:15:21,459:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 12:19:25,690:MainProcess:root:INFO:Voting Regressor Training Complete
2021-01-04 12:23:38,579:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 12:27:42,922:MainProcess:root:INFO:Voting Regressor Training Complete
2021-01-04 13:31:03,657:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 13:36:24,618:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 13:41:11,766:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 13:47:05,625:MainProcess:root:INFO:Voting Regressor Training Complete
2021-01-04 13:48:42,200:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 13:50:32,930:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 13:55:40,971:MainProcess:root:INFO:Voting Regressor Training Complete
2021-01-04 13:56:32,157:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 14:00:47,583:MainProcess:root:INFO:Voting Regressor Training Complete
2021-01-04 14:02:17,248:MainProcess:root:INFO:Results from Voting Regressor Search (VRS):
2021-01-04 14:02:17,257:MainProcess:root:INFO:VRS best estimator: Pipeline(steps=[('scaler', QuantileTransformer()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x000001A7F0CD77C8>),
                                             ('RandomForest',
                                              RandomForestRegressor())]))])
2021-01-04 14:02:17,259:MainProcess:root:INFO:VRS Best params: {'scaler': QuantileTransformer(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x000001A7F05E14C8>),
                            ('RandomForest', RandomForestRegressor())]), 'feature_selection': 'passthrough'}
2021-01-04 14:02:17,259:MainProcess:root:INFO:VRS Cross Validation Scores: [0.60234832 0.80612766 0.7722815  0.34536966 0.725633  ]
2021-01-04 14:02:17,259:MainProcess:root:INFO:VRS Validation Score: 0.82
2021-01-04 14:02:17,259:MainProcess:root:INFO:VRS accuracy on all data: 0.65 (+/- 0.33)
2021-01-04 14:02:17,259:MainProcess:root:INFO:VRS test score: 0.85
2021-01-04 14:02:17,259:MainProcess:root:INFO:VRS R2 score: 0.85
2021-01-04 14:02:39,723:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 14:02:39,723:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 14:20:53,019:MainProcess:root:INFO:Voting Regressor Training Complete
2021-01-04 14:20:53,019:MainProcess:root:INFO:Voting Regressor Training Complete
2021-01-04 14:21:45,184:MainProcess:root:INFO:Results from Voting Regressor Search (VRS):
2021-01-04 14:21:45,184:MainProcess:root:INFO:Results from Voting Regressor Search (VRS):
2021-01-04 14:21:45,200:MainProcess:root:INFO:VRS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x000001A7F9512E48>),
                                             ('RandomForest',
                                              RandomForestRegressor()),
                                             ('ElasticNet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0))]))])
2021-01-04 14:21:45,200:MainProcess:root:INFO:VRS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x000001A7F9512E48>),
                                             ('RandomForest',
                                              RandomForestRegressor()),
                                             ('ElasticNet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0))]))])
2021-01-04 14:21:45,203:MainProcess:root:INFO:VRS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x000001A7F0F65F08>),
                            ('RandomForest', RandomForestRegressor()),
                            ('ElasticNet',
                             ElasticNet(alpha=100.0, l1_ratio=1.0))]), 'feature_selection': 'passthrough'}
2021-01-04 14:21:45,203:MainProcess:root:INFO:VRS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x000001A7F0F65F08>),
                            ('RandomForest', RandomForestRegressor()),
                            ('ElasticNet',
                             ElasticNet(alpha=100.0, l1_ratio=1.0))]), 'feature_selection': 'passthrough'}
2021-01-04 14:21:45,203:MainProcess:root:INFO:VRS Cross Validation Scores: [   0.53849662    0.79539697    0.74006649 -270.5220462     0.73487989]
2021-01-04 14:21:45,203:MainProcess:root:INFO:VRS Cross Validation Scores: [   0.53849662    0.79539697    0.74006649 -270.5220462     0.73487989]
2021-01-04 14:21:45,203:MainProcess:root:INFO:VRS Validation Score: 0.78
2021-01-04 14:21:45,203:MainProcess:root:INFO:VRS Validation Score: 0.78
2021-01-04 14:21:45,203:MainProcess:root:INFO:VRS accuracy on all data: -53.54 (+/- 216.98)
2021-01-04 14:21:45,203:MainProcess:root:INFO:VRS accuracy on all data: -53.54 (+/- 216.98)
2021-01-04 14:21:45,203:MainProcess:root:INFO:VRS test score: 0.81
2021-01-04 14:21:45,203:MainProcess:root:INFO:VRS test score: 0.81
2021-01-04 14:21:45,203:MainProcess:root:INFO:VRS R2 score: 0.81
2021-01-04 14:21:45,203:MainProcess:root:INFO:VRS R2 score: 0.81
2021-01-04 14:27:12,876:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 14:59:16,684:MainProcess:root:INFO:Voting Regressor Training Complete
2021-01-04 15:07:08,301:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 15:24:18,339:MainProcess:root:INFO:Voting Regressor Training Complete
2021-01-04 15:24:50,423:MainProcess:root:INFO:Results from Voting Regressor Search (VRS):
2021-01-04 15:24:50,440:MainProcess:root:INFO:VRS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x000001A37424E1C8>),
                                             ('RandomForest',
                                              RandomForestRegressor()),
                                             ('ElasticNet',
                                              ElasticNet(alpha=100.0,
                                                         l1_ratio=1.0))]))])
2021-01-04 15:24:50,443:MainProcess:root:INFO:VRS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x000001A371109EC8>),
                            ('RandomForest', RandomForestRegressor()),
                            ('ElasticNet',
                             ElasticNet(alpha=100.0, l1_ratio=1.0))]), 'feature_selection': 'passthrough'}
2021-01-04 15:24:50,443:MainProcess:root:INFO:VRS Cross Validation Scores: [0.78661765 0.76608794 0.77319396 0.59188394 0.74933833]
2021-01-04 15:24:50,443:MainProcess:root:INFO:VRS Validation Score: 0.78
2021-01-04 15:24:50,443:MainProcess:root:INFO:VRS accuracy on all data: 0.73 (+/- 0.14)
2021-01-04 15:24:50,443:MainProcess:root:INFO:VRS test score: 0.81
2021-01-04 15:24:50,443:MainProcess:root:INFO:VRS R2 score: 0.81
2021-01-04 15:32:51,753:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-04 15:51:19,365:MainProcess:root:INFO:Voting Regressor Training Complete
2021-01-04 15:51:21,460:MainProcess:root:INFO:Results from Voting Regressor Search (VRS):
2021-01-04 15:51:21,476:MainProcess:root:INFO:VRS best estimator: Pipeline(steps=[('scaler', QuantileTransformer()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('RandomForest',
                                              RandomForestRegressor()),
                                             ('KNeighbors',
                                              KNeighborsRegressor(n_neighbors=10,
                                                                  weights='distance'))]))])
2021-01-04 15:51:21,479:MainProcess:root:INFO:VRS Best params: {'scaler': QuantileTransformer(), 'regressor': VotingRegressor(estimators=[('RandomForest', RandomForestRegressor()),
                            ('KNeighbors',
                             KNeighborsRegressor(n_neighbors=10,
                                                 weights='distance'))]), 'feature_selection': 'passthrough'}
2021-01-04 15:51:21,479:MainProcess:root:INFO:VRS Cross Validation Scores: [0.75669027 0.73174816 0.74249208 0.54884723 0.74448228]
2021-01-04 15:51:21,479:MainProcess:root:INFO:VRS Validation Score: 0.75
2021-01-04 15:51:21,479:MainProcess:root:INFO:VRS accuracy on all data: 0.70 (+/- 0.16)
2021-01-04 15:51:21,480:MainProcess:root:INFO:VRS test score: 0.79
2021-01-04 15:51:21,480:MainProcess:root:INFO:VRS R2 score: 0.79
2021-01-06 14:50:21,793:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-06 15:08:39,544:MainProcess:root:INFO:Voting Regressor Training Complete
2021-01-06 15:09:07,754:MainProcess:root:INFO:Results from Voting Regressor Search (VRS):
2021-01-06 15:09:07,777:MainProcess:root:INFO:VRS best estimator: Pipeline(steps=[('scaler', QuantileTransformer()),
                ('feature_selection',
                 SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x000001C4F6A26088>)),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x000001C4F6A260C8>),
                                             ('RandomForest',
                                              RandomForestRegressor()),
                                             ('KNeighbors',
                                              KNeighborsRegressor(n_neighbors=10,
                                                                  weights='distance')),
                                             ('DecisionTree',
                                              DecisionTreeRegressor())]))])
2021-01-06 15:09:07,781:MainProcess:root:INFO:VRS Best params: {'scaler': QuantileTransformer(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x000001C4F38AD3C8>),
                            ('RandomForest', RandomForestRegressor()),
                            ('KNeighbors',
                             KNeighborsRegressor(n_neighbors=10,
                                                 weights='distance')),
                            ('DecisionTree', DecisionTreeRegressor())]), 'feature_selection': SelectFromModel(estimator=<catboost.core.CatBoostRegressor object at 0x000001C4F38AD3C8>)}
2021-01-06 15:09:07,781:MainProcess:root:INFO:VRS Cross Validation Scores: [0.70794012 0.78971412 0.78623411 0.70291214 0.71550237]
2021-01-06 15:09:07,781:MainProcess:root:INFO:VRS Validation Score: 0.77
2021-01-06 15:09:07,781:MainProcess:root:INFO:VRS accuracy on all data: 0.74 (+/- 0.08)
2021-01-06 15:09:07,781:MainProcess:root:INFO:VRS test score: 0.84
2021-01-06 15:09:07,781:MainProcess:root:INFO:VRS R2 score: 0.84
2021-01-07 10:52:59,922:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-07 11:16:45,363:MainProcess:root:INFO:Voting Regressor Training Complete
2021-01-07 11:17:02,128:MainProcess:root:INFO:Results from Voting Regressor Search (VRS):
2021-01-07 11:17:02,137:MainProcess:root:INFO:VRS best estimator: Pipeline(steps=[('scaler', RobustScaler()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x00000210F30BADC8>),
                                             ('KNeighbors',
                                              KNeighborsRegressor(n_neighbors=10,
                                                                  weights='distance'))]))])
2021-01-07 11:17:02,139:MainProcess:root:INFO:VRS Best params: {'scaler': RobustScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x00000210EFF18CC8>),
                            ('KNeighbors',
                             KNeighborsRegressor(n_neighbors=10,
                                                 weights='distance'))]), 'feature_selection': 'passthrough'}
2021-01-07 11:17:02,139:MainProcess:root:INFO:VRS Cross Validation Scores: [0.62432664 0.33887987 0.43714036 0.38992779 0.46010972]
2021-01-07 11:17:02,139:MainProcess:root:INFO:VRS Validation Score: 0.62
2021-01-07 11:17:02,139:MainProcess:root:INFO:VRS accuracy on test data: 0.45 (+/- 0.19)
2021-01-07 11:17:02,139:MainProcess:root:INFO:VRS test score: 0.49
2021-01-07 11:17:02,139:MainProcess:root:INFO:VRS R2 score: 0.49
2021-01-07 14:34:11,226:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-07 14:34:11,226:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-07 14:34:42,285:MainProcess:root:INFO:Starting Voting Regressor Training
2021-01-07 14:51:13,813:MainProcess:root:INFO:Voting Regressor Training Complete
2021-01-07 14:51:30,087:MainProcess:root:INFO:Results from Voting Regressor Search (VRS):
2021-01-07 14:51:30,102:MainProcess:root:INFO:VRS best estimator: Pipeline(steps=[('scaler', StandardScaler()),
                ('feature_selection', 'passthrough'),
                ('regressor',
                 VotingRegressor(estimators=[('catboost',
                                              <catboost.core.CatBoostRegressor object at 0x000002B4F6DFB0C8>),
                                             ('RandomForest',
                                              RandomForestRegressor()),
                                             ('DecisionTree',
                                              DecisionTreeRegressor())]))])
2021-01-07 14:51:30,105:MainProcess:root:INFO:VRS Best params: {'scaler': StandardScaler(), 'regressor': VotingRegressor(estimators=[('catboost',
                             <catboost.core.CatBoostRegressor object at 0x000002B4F3C6B488>),
                            ('RandomForest', RandomForestRegressor()),
                            ('DecisionTree', DecisionTreeRegressor())]), 'feature_selection': 'passthrough'}
2021-01-07 14:51:30,105:MainProcess:root:INFO:VRS Cross Validation Scores: [0.74750602 0.80163096 0.75997455 0.69791563 0.68131566]
2021-01-07 14:51:30,105:MainProcess:root:INFO:VRS Validation Score: 0.77
2021-01-07 14:51:30,105:MainProcess:root:INFO:VRS accuracy on test data: 0.74 (+/- 0.09)
2021-01-07 14:51:30,105:MainProcess:root:INFO:VRS test score: 0.81
2021-01-07 14:51:30,105:MainProcess:root:INFO:VRS R2 score: 0.81
2021-01-07 17:58:23,596:MainProcess:root:INFO:Starting Voting Regressor Training
